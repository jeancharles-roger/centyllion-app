openapi: '3.0.2'
info:
  version: "1.0"
  title: API to interface with Centyllion simulations
servers:
  - url: https://app.centyllion.com/api

paths:
  /me:
    get:
      summary: Get my profile description
      tags:
        - me
      responses:
        '200':
          description: A JSON containing my profile.
  /me/model:
    get:
      summary: Get the list of my models
      tags:
        - me
      parameters:
        - in: query
          name: offset
          description: Offset in the result list from the overwhole list
          schema: 
            type: integer
            default: 0
        - in: query
          name: limit
          description: Limit of model in the result list
          schema:
            type: integer
            default: 50
      responses:
        200:
          description: A result page of models
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrainModelDescriptionResultPage'
  /me/simulation:
    get:
      summary: Get the list of my simulations
      tags:
        - me
      parameters:
        - in: query
          name: offset
          description: Offset in the result list from the overwhole list
          schema: 
            type: integer
            default: 0
        - in: query
          name: limit
          description: Limit of model in the result list
          schema:
            type: integer
            default: 50
      responses:
        200:
          description: A result page of simulations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationDescriptionResultPage'
  /me/subscription:
    get:
      summary: Get the list of my subscription
      tags:
        - me
      responses:
        200:
          description: A list of subscriptions
  /me/asset:
    get:
      summary: Get the list of my assets
      tags:
        - me
      responses:
        200:
          description: A list of assets

  /model:
    get:
      summary: Get the list of public models
      tags:
        - models
      parameters:
        - in: query
          name: offset
          description: Offset in the result list from the overwhole list
          schema: 
            type: integer
            default: 0
        - in: query
          name: limit
          description: Limit of model in the result list
          schema:
            type: integer
            default: 50
      responses:
        200:
          description: A result page of models
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrainModelDescriptionResultPage'
    post:
        summary: Create a new model
        tags:
          - models
        requestBody:
          required: true
          description: A model description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrainModel'
        responses:
          200:
            description: The created model description
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GrainModelDescription'
  /model/search:
    get:
      summary: Full text search in models
      tags:
        - models
      parameters:
        - in: query
          name: q
          description: Search query
          required: true
          schema: 
            type: string
        - in: query
          name: offset
          description: Offset in the result list from the overwhole list
          schema: 
            type: integer
            default: 0
        - in: query
          name: limit
          description: Limit of model in the result list
          schema:
            type: integer
            default: 50

      responses:
        200:
          description: A result page of models
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrainModelDescriptionResultPage'
  /model/{id}:
    get:
      summary: Access to a model with its id
      tags:
        - models
      parameters:
        - in: path
          name: id
          description: GrainModel id
          required: true
          schema:
            type: string
      responses:
        200:
          description: A model description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrainModelDescription'
        401:
          description: GrainModel access isn't granted
        404:
          description: The model with the given id doesn't exist
    patch:
      summary: Update the model
      tags:
        - models
      parameters:
        - in: path
          name: id
          description: GrainModel id
          required: true
          schema:
            type: string
      requestBody:
        description: The updated model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrainModelDescription' 
      responses:
        200:
          description: The model was updated
        401:
          description: GrainModel update isn't granted
        404:
          description: The model with the given id doesn't exist
    delete:
      summary: Delete the model
      tags:
        - models
      parameters:
        - in: path
          name: id
          description: GrainModel id
          required: true
          schema:
            type: string
      responses:
        200:
          description: The model was updated
        401:
          description: GrainModel update isn't granted
        404:
          description: The model with the given id doesn't exist

  /simulation:
    get:
      summary: Get the list of public simulations
      tags:
        - simulations
      parameters:
        - in: query
          name: offset
          description: Offset in the result list from the overwhole list
          schema: 
            type: integer
            default: 0
        - in: query
          name: limit
          description: Limit of model in the result list
          schema:
            type: integer
            default: 50
      responses:
        200:
          description: A result page of simulations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationDescriptionResultPage'
    post:
        summary: Create a new simulation
        tags:
          - simulations
        parameters:
          - in: path          
            name: model
            description: model id for the simulation
            required: true
            schema:
              type: string
        requestBody:
            description: A simulation
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Simulation'
        responses:
          200:
            description: The created simulation description
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SimulationDescription'
  /simulation/search:
    get:
      summary: Full text search in simulations
      tags:
        - simulations
      parameters:
        - in: query
          name: q
          description: Search query
          required: true
          schema:
            type: string
        - in: query
          name: offset
          description: Offset in the result list from the overwhole list
          schema: 
            type: integer
            default: 0
        - in: query
          name: limit
          description: Limit of model in the result list
          schema:
            type: integer
            default: 50
      responses:
        200:
          description: A result page of models
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationDescriptionResultPage'
  /simulation/{id}:
    get:
      summary: Access to a simulation with its id
      tags:
        - simulations
      parameters:
        - in: path
          name: id
          description: Simulation id
          required: true
          schema:
            type: string
      responses:
        200:
          description: A simulation description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationDescription'
        401:
          description: Simulation access isn't granted
        404:
          description: The simulation with the given id doesn't exist
    patch:
      summary: Update the simulation
      tags:
        - simulations
      parameters:
        - in: path
          name: id
          description: Simulation id
          required: true
          schema:
            type: string
      requestBody:
          description: The updated simulation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Simulation'
      responses:
        200:
          description: The simulaltion was updated
        401:
          description: Simulation update isn't granted
        404:
          description: The simulation with the given id doesn't exist
    delete:
      summary: Delete the simulation
      tags:
        - simulations
      parameters:
        - in: path
          name: id
          description: Simulation id
          required: true
          schema:
            type: string
      responses:
        200:
          description: The simulation was updated
        401:
          description: Simulation update isn't granted
        404:
          description: The simulation with the given id doesn't exist
  /simulation/{id}/thumbnail:
    get:
      summary: Access to a simulation's thumbnail
      tags:
        - simulations
      parameters:
        - in: path
          name: id
          description: Simulation id
          required: true
          schema:
            type: string
      responses:
        200:
          description: The simulation thumbnail
        401:
          description: Simulation thumbnail access isn't granted
        404:
          description: The simulation with the given id doesn't exist
    post:
      summary: Post a new simulation's thumbnail
      tags:
        - simulations
      parameters:
        - in: path
          name: id
          description: Simulation id
          required: true
          schema:
            type: string
      responses:
        200:
          description: The simulation thumbnail was update
        401:
          description: Simulation thumbnail update isn't granted
        404:
          description: The simulation with the given id doesn't exist

components:
  schemas:
    Direction:
      type: string
      enum: [Left, Right, Up, Down, LeftUp, RightUp, LeftDown, RightDown, Front, Back]
    Grain:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        color:
          type: string
        icon:
          type: string
        size:
          type: number
        description:
          type: string
        halfLife:
          type: integer
        movementProbability:
          type: number
        allowedDirection:
          type: array
          items:
            $ref: '#/components/schemas/Direction'
        fieldProductions:
          type: object
        fieldInfluences:
          type: object
        fieldPermeable:
          type: object
    Reaction:
      type: object
      properties:
        reactiveId:
          type: integer
        productId:
          type: integer
        sourceReactive:
          type: integer
        allowedDirection:
          type: array
          items:
            $ref: '#/components/schemas/Direction'
    Behaviour:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        probability:
          type: number
        #agePredicate: Predicate<Int> = Predicate(Operator.GreaterThanOrEquals, 0),
        #val fieldPredicates: List<Pair<Int, Predicate<Float>>> = emptyList(),
        mainReactiveId:
          type: integer
        mainProductId:
          type: integer
        sourceReactive:
          type: integer
        fieldInfluences:
          type: object
        reaction:
          type: array
          items:
            $ref: '#/components/schemas/Reaction'
    Field:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        color:
          type: string
        description:
          type: string
        speed:
          type: number
        halfLife:
          type: integer
        allowedDirection:
          type: array
          items:
            $ref: '#/components/schemas/Direction'
    GrainModel:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        grains:
          type: array
          items:
            $ref: '#/components/schemas/Grain'
        behaviours:
          type: array
          items:
            $ref: '#/components/schemas/Behaviour'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
    Asset3d:
      type: object
      properties:
        url: 
          type: string
        opacity: 
          type: number
        x: 
          type: number
        y: 
          type: number
        z: 
          type: number
        xScale: 
          type: number
        yScale: 
          type: number
        zScale: 
          type: number
        xRotation: 
          type: number
        yRotation: 
          type: number
        zRotation: 
          type: number
    Simulation:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        width:
          type: integer
        height:
          type: integer
        depth:
          type: integer
        agents:
          type: array
          items:
            type: integer
        assets:
          type: array
          items:
            $ref: '#/components/schemas/Asset3d'
    DescriptionInfo:
      type: object
      properties:
        userId: 
          type: string
        createdOn: 
          type: string
        lastModifiedOn:
          type: string
        readAccess:
          type: boolean
    GrainModelDescription:
      type: object
      properties:
        id:
          type: string
        info:
          $ref: '#/components/schemas/DescriptionInfo'
        model: 
          $ref: '#/components/schemas/GrainModel'
    SimulationDescription:
      type: object
      properties:
        id:
          type: string
        info:
          $ref: '#/components/schemas/DescriptionInfo'
        modelId:
          type: string
        thumbnail:
          type: string
        simulation: 
          $ref: '#/components/schemas/Simulation'
    GrainModelDescriptionResultPage:
      type: object
      properties:
        offset:
          type: integer
        totalSize: 
          type: integer
        content:
          type: array
          items:
            $ref: '#/components/schemas/GrainModelDescription'
    SimulationDescriptionResultPage:
      type: object
      properties:
        offset:
          type: integer
        totalSize: 
          type: integer
        content:
          type: array
          items:
            $ref: '#/components/schemas/SimulationDescription'


