[versions]
kotlin = "1.9.20"
compose = "1.5.10"
sqldelight = "2.0.0"
graalvm-native-image = "1.4.1"

serialization = "1.6.0"
coroutines = "1.7.22"
postgresql = "42.6.0"
kotlinx-html = "0.7.3"
bulma-kotlin = "0.5"
babylon-kotlin = "0.5.2"
data2viz = "0.10.1"
markdown = "0.5.2"
evaluator = "0.15.0"
clikt = "4.2.1"
font-awesome = "1.0.0"
mpfilepicker = "2.1.0"
ktor = "2.3.6"

junit = "5.6.0"

[libraries]
# Core
serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
evaluator = { module = "io.github.murzagalin:multiplatform-expressions-evaluator", version.ref = "evaluator" }
kotlinx-html = { module = "org.jetbrains.kotlinx:kotlinx-html", version.ref = "kotlinx-html" }
bulma-kotlin = { module = "com.centyllion:bulma-kotlin", version.ref = "bulma-kotlin"}
babylon-kotlin = { module = "com.centyllion:babylon-kotlin", version.ref = "babylon-kotlin"}
data2viz-core = { module = "io.data2viz.d2v:d2v-core", version.ref = "data2viz" }
data2viz-color = { module = "io.data2viz.d2v:d2v-color", version.ref = "data2viz" }
data2viz-scale = { module = "io.data2viz.d2v:d2v-scale", version.ref = "data2viz" }
data2viz-viz = { module = "io.data2viz.d2v:d2v-viz", version.ref = "data2viz" }
data2viz-axis = { module = "io.data2viz.d2v:d2v-axis", version.ref = "data2viz" }
markdown = { module = "org.jetbrains:markdown", version.ref = "markdown" }
sqldelight-jdbc = { module = "app.cash.sqldelight:jdbc-driver", version.ref = "sqldelight" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
clikt = { module = "com.github.ajalt.clikt:clikt", version.ref = "clikt" }

# Ktor Server
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }

# Compose UI
font-awesome = { module = "br.com.devsrsouza.compose.icons.jetbrains:font-awesome", version.ref = "font-awesome" }
mpfilepicker = { module = "com.darkrockstudios:mpfilepicker", version.ref = "mpfilepicker" }

# Tests
test-common = { module = "org.jetbrains.kotlin:kotlin-test-common", version.ref = "kotlin"}
test-annotation = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin"}
test-jvm = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin"}
test-js = { module = "org.jetbrains.kotlin:kotlin-test-js", version.ref = "kotlin"}
jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }

[bundles]
ktor = [
    "ktor-server-core",
    "ktor-server-cio",
    "ktor-server-content-negotiation",
    "ktor-server-serialization",
    "ktor-server-cors"
]
data2viz = [ "data2viz-core", "data2viz-color", "data2viz-scale", "data2viz-viz", "data2viz-axis"]
test = [ "test-common", "test-annotation"]
test-jvm = ["test-jvm", "jupiter-api", "jupiter-engine"]
test-js = ["test-js"]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
graalvm-native-image = { id = "org.mikeneck.graalvm-native-image", version.ref = "graalvm-native-image" }
